(self.webpackChunkblog=self.webpackChunkblog||[]).push([[941],{35941:n=>{n.exports="## [69. x 的平方根](https://leetcode-cn.com/problems/sqrtx/)\n\n实现 `int sqrt(int x)` 函数。\n\n计算并返回 `x `的平方根，其中` x` 是非负整数。\n\n由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。\n\n**示例 1：**\n\n```\n输入: 4\n输出: 2\n```\n\n**示例 2：**\n\n```\n输入: 8\n输出: 2\n说明: 8 的平方根是 2.82842..., \n     由于返回类型是整数，小数部分将被舍去。\n```\n\n#### 解题思路\n\n我们可以把这道题想象成，给定一个非负整数 `a`，求 $f(x)=x^2- a=0$ 的解。因为我们只考虑 $x \\ge 0$，所以 $f(x)$ 在定义域上是单调递增的。考虑到 $f(0)=-a\\le 0, f(a)=a^2-a\\ge 0$，我们可以对 `[0, a]` 区间使用二分法找到$f(x)=0$的解。\n\nC++实现：\n\n```cpp\nclass Solution {\npublic:\n    int mySqrt(int x) {\n        if (x == 0)\n            return 0;\n        int left = 1, right = x, mid, half;\n        while (left <= right) {\n            mid = left + (right - left) / 2;\n            half = x / mid;\n            if (half == mid)\n                return mid;\n            else if (half > mid)\n                left = mid + 1;\n            else\n                right = mid - 1;\n        }\n        return right;  // 由于最终half*mid必然小于x, 所以此处取right是满足条件的\n    }\n};\n```\n\nPython实现：\n\n```python\nclass Solution:\n    def mySqrt(self, x: int) -> int:\n        if x == 0:\n            return 0\n        left, right = 1, x\n        while left <= right:\n            mid = (left + right) // 2\n            value = x // mid\n            if mid == value:\n                return mid\n            elif mid > value:\n                right = mid - 1\n            else:\n                left = mid + 1\n        return right\n```"}}]);